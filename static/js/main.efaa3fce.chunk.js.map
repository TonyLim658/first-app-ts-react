{"version":3,"sources":["API.ts","App.tsx","index.tsx"],"names":["Difficulty","fetchQuizQuestions","amount","difficulty","a","endpoint","fetch","json","data","console","log","App","useState","EASY","startTrivia","className","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHAEYA,E,+EAAAA,K,YAAAA,E,gBAAAA,E,aAAAA,M,KAML,IAAMC,EAAkB,uCAAG,WAAOC,EAAgBC,GAAvB,iBAAAC,EAAA,6DACxBC,EADwB,6CACyBH,EADzB,uBAC8CC,EAD9C,2BAEJG,MAAMD,GAFF,8BAEaE,OAFb,OAExBC,EAFwB,OAG9BC,QAAQC,IAAIF,GAHkB,2CAAH,wDCyChBG,EA1CH,WAAO,IAAD,EACcC,oBAAS,GADvB,gCAEkBA,mBAAS,KAF3B,gCAGYA,mBAAS,IAHrB,gCAIsBA,mBAAS,KAJ/B,gCAKUA,mBAAS,IALnB,gCAMgBA,oBAAS,IANzB,6BAQhBH,QAAQC,IAAIT,EAVU,GAU0BD,EAAWa,OAE3D,IAAMC,EAAW,uCAAG,sBAAAV,EAAA,0FAAH,qDAWjB,OACE,sBAAKW,UAAU,MAAf,UACE,6CACA,wBAAQA,UAAU,QAAQC,QAASF,EAAnC,mBACA,mBAAGC,UAAU,QAAb,oBACA,sDASA,wBAAQA,UAAU,OAAOC,QAjBR,aAiBjB,+BCtCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.efaa3fce.chunk.js","sourcesContent":["\r\n\r\nexport enum Difficulty {\r\n    EASY = \"easy\",\r\n    MEDIUM = \"medium\",\r\n    HARD = \"hard\",\r\n}\r\n\r\nexport const fetchQuizQuestions = async (amount: number, difficulty: Difficulty) => {\r\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\r\n    const data = await (await fetch(endpoint)).json();\r\n    console.log(data);\r\n}","import React, {useState} from 'react';\nimport {fetchQuizQuestions, Difficulty} from './API'\n// Components\nimport QuestionCard from './components/QuestionCard'\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [scode, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  console.log(fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY))\n\n  const startTrivia = async () => {\n\n  }\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\n  }\n\n  const nextQuestion = () => {\n\n  }\n  return (\n    <div className=\"App\">\n      <h1>REACT QUIZZ</h1>\n      <button className=\"start\" onClick={startTrivia}>Start</button>\n      <p className=\"score\">Score:</p>\n      <p>Loading Questions ...</p>\n      {/* <QuestionCard \n        questionNr={number + 1} \n        totalQuestions={TOTAL_QUESTIONS}\n        question={questions[number].question}\n        answers={questions[number].answers}\n        userAnswer={userAnswers ? userAnswers[number] : undefined}\n        callback={checkAnswer}\n      /> */}\n      <button className=\"next\" onClick={nextQuestion}>\n        Next Question\n    </button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}